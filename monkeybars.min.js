/*!
*
* MonkeyBars v0.9.2
* 
* Task library that provides a simple structure for handling singular, sequential 
* and parallel units of code. 
*
* https://github.com/mcgaryes/monkeybars
*
*/
(function(){"use strict";var e=0,t=1,n=2,r=3,i=4,s="parallel",o="sequence",u="simple",a="for",f="when",l="while",c="tid",h=100,p="This method must be overridden.",d="Task is undefined.",v="You must pass some attributes in order to create a task.",m=this,g=0,y=m.MonkeyBars={};typeof exports!="undefined"&&typeof module!="undefined"&&module.exports&&(exports=module.exports=y);var b=function(e){if(!e){console.error(v);return}var t;if(e.tid)t=e;else{var n=e.type,r=e.tasks;r&&(e.tasks=w(r)),n?n===u?t=new C(e):n===o?t=new A(e):n===s&&(t=new L(e)):r?t=new A(e):t=new C(e)}return t},w=function(e){var t=[];if(e)for(var n=0;n<e.length;n++)t.push(b(e[n]));return t},E=function(e){var t={};for(var n in e)t[n]={value:e[n],writable:!0,configurable:!0,enumerable:!0};return t},S=function(t){t.state=e;if(t.type!==u&&t.tasks){t.currentIndex=0;for(var n=0;n<t.tasks.length;n++)S(t.tasks[n])}},x=function(e){var t=g++,n=e?e+t:c+t;return n},T=function(e,t){var n=e.dependencies;if(n){var r=n.length;for(var i=0;i<r;i++){var s=n[i];if(s===t.tid)return!0;if(s===t.id)return!0;if(s===t.name&&t.name!=="undefined")return!0}}return!1},N=function(e){var t=this,n=function(){t.apply(this,arguments)},r=E(e);return n.prototype=Object.create(t.prototype,r),n},C=y.Task=function(e){var t=this;t.tid=x();for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n]);t.decorators=[],t.count&&O(t),t.when&&_(t),t.while&&M(t)};C.prototype=Object.create({},{type:{get:function(){return u}},displayName:{get:function(){return this.id?this.id:this.name?this.name:this.type}},state:{value:e,writable:!0},cancel:{value:function(){if(this.state>t)return;this.state=n,this.loggingEnabled&&console.log("Canceled:"+this.displayName),this.onChange(this.state),this.onCancel()},writable:!0},complete:{value:function(){if(this.state>t)return;this.state=i,this.loggingEnabled&&console.log("Completed:"+this.displayName),this.executionTime=(new Date).getTime()-this.startTime,this.onComplete(),this.onChange(this.state)},writable:!0},fault:{value:function(e){if(this.state>=n)return;this.state=r,this.loggingEnabled&&console.log("Faulted:"+this.displayName),this.onChange(this.state,e),this.onFault(e)},writable:!0},onChange:{value:function(e,t){},writable:!0},onStart:{value:function(){},writable:!0},onFault:{value:function(e){},writable:!0},onComplete:{value:function(){},writable:!0},onCancel:{value:function(){},writable:!0},performTask:{value:function(){throw p},writable:!0},start:{value:function(){if(this.state>=t)return;this.startTime=(new Date).getTime(),this.state=t,this.loggingEnabled&&console.log("Started:"+this.displayName),this.onChange(this.state),this.performTask(),this.onStart()},writable:!0}});var k=y.TaskGroup=function(e){var t=this;e&&(t.tasks=w(e.tasks)),t.dependencyMap={};if(t.tasks)for(var n=0;n<t.tasks.length;n++){var r=t.tasks[n];this.dependencyMap[r.tid]=[],t.setDependeciesForTask(r)}C.call(t,e)};k.prototype=Object.create(C.prototype,{currentIndex:{value:0,writable:!0},addSubTask:{value:function(e){e.tid||(e=b(e)),this.setDependeciesForTask(e),this.tasks.push(e)},writable:!0},addSubTaskAfterTask:{value:function(e,t){if(!e||this.state===n)return;e.tid||(e=b(e)),this.setDependeciesForTask(e);var r=this.tasks.indexOf(t);this.tasks.splice(r+1,0,e)},writable:!0},addSubTaskBeforeTask:{value:function(e,t){if(!e||this.state===n)return;e.tid||(e=b(e)),this.setDependeciesForTask(e);var r=this.tasks.indexOf(t);this.tasks.splice(r,0,e)},writable:!0},onSubTaskComplete:{value:function(){throw p},writable:!0},onSubTaskFault:{value:function(e){this.fault(e)},writable:!0},onSubTaskCancel:{value:function(e){for(var t=0;t<this.tasks.length;t++)T(this.tasks[t],e)&&(this.tasks[t].state=n)},writable:!0},processSubTask:{value:function(e){if(!e){console.error(d);return}return e.state===n?(this.onSubTaskCancel(e),!0):(e.group=this,e.loggingEnabled=this.loggingEnabled,e.onChange=function(t,s){t===i?this.group.onSubTaskComplete():t===r?this.group.onSubTaskFault(s):t===n&&this.group.onSubTaskCancel(e)},e.start(),!1)},writable:!0},removeSubTask:{value:function(e){if(!e)return;var t=this.tasks.indexOf(e);this.tasks.splice(t,1)},writable:!0},getTaskByTid:{value:function(e){for(var t=0;t<this.tasks.length;t++){var n=this.tasks[t];if(n.tid===e)return n}},writable:!0},getTaskById:{value:function(e){for(var t=0;t<this.tasks.length;t++){var n=this.tasks[t];if(n.id===e)return n}},writable:!0},getTaskByName:{value:function(e){for(var t=0;t<this.tasks.length;t++){var n=this.tasks[t];if(n.name===e)return n}},writable:!0},cancel:{value:function(){C.prototype.cancel.call(this);for(var t=0;t<this.tasks.length;t++){var r=this.tasks[t];r.state>e?r.cancel():r.state=n}},writable:!0},setDependeciesForTask:{value:function(e){if(e.dependencies){var t=e.dependencies.length;for(var n=0;n<t;n++){var r=e.dependencies[n];r.tid?this.dependencyMap[e.tid].push(r.tid):this.dependencyMap[e.tid].push(r)}}},writable:!1}});var L=y.ParallelTask=function(e){var t=this;k.call(t,e)};L.prototype=Object.create(k.prototype,{type:{get:function(){return s}},hasNoEnabledSubTasks:{value:function(){if(!this.tasks)return!0;for(var e=0;e<this.tasks.length;e++){var t=this.tasks[e];if(t.state!==n)return!1}return!0},writable:!0},processSubTasks:{value:function(){for(var e=0;e<this.tasks.length;e++){var t=this.tasks[e];this.currentIndex++,this.processSubTask(t)}},writable:!0},addSubTask:{value:function(e){if(!e||e.state===n)return;this.currentIndex++,e.tid||(e=b(e)),this.tasks.push(e),this.processSubTask(e)},writable:!0},onSubTaskComplete:{value:function(){this.currentIndex=this.currentIndex++,this.currentIndex===this.tasks.length&&this.complete()},writable:!0},performTask:{value:function(){this.hasNoEnabledSubTasks()?this.complete():this.processSubTasks()},writable:!0}});var A=y.SequenceTask=function(e){var t=this;k.call(t,e)};A.prototype=Object.create(k.prototype,{type:{get:function(){return o}},startNextSubTask:{value:function(){if(this.state>=n)return;if(this.tasks&&this.currentIndex<this.tasks.length){var e=this.processSubTask(this.tasks[this.currentIndex++]);e&&this.startNextSubTask()}else this.complete()},writable:!0},onSubTaskComplete:{value:function(){if(this.state===n)return;this.startNextSubTask()},writable:!0},onSubTaskCancel:{value:function(e){k.prototype.onSubTaskCancel.call(this,e),this.state!==n&&this.startNextSubTask()},writable:!0},performTask:{value:function(){this.startNextSubTask()},writable:!0}}),C.extend=k.extend=L.extend=A.extend=N;var O=function(e){e.decorators.push(a),e.itterationIndex=0,e.complete=function(){this.itterationIndex!==this.count-1?(S(this),this.itterationIndex++,this.loggingEnabled&&console.log("Completed:"+this.displayName+" "+this.itterationIndex+" out of "+this.count+" times"),this.performTask()):C.prototype.complete.call(this)}},M=function(t){t.decorators.push(l),t.interval=t.interval?t.interval:h,t.complete=function(){if(this.while()){this.state=e;var t=this;this.interval!==0?setTimeout(function(){t.start()},this.interval):t.start()}else C.prototype.complete.call(this)}},_=function(e){e.decorators.push(f),e.interval=e.interval?e.interval:h,e.start=function(){if(this.when())C.prototype.start.call(this);else{var e=this;setTimeout(function(){e.start()},this.interval)}}};y.TaskStates={Initialized:e,Started:t,Canceled:n,Faulted:r,Completed:i},y.TaskTypes={Parallel:s,Sequence:o,Simple:u},y.TaskDecorators={For:a,When:f,While:l}}).call(this);